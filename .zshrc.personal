function evc() {
  # The /dev/null usage just makes sure we're silently updating our pwd stack
  pushd $HOME/.config/nvim > /dev/null
  nvim .
  popd > /dev/null
}

function etx() {
  nvim ~/.config/tmux/tmux.conf
  tmux source-file ~/.config/tmux/tmux.conf
  echo "Reloaded tmux.conf"
}

function erc() {
  nvim ~/.zshrc.personal
  source ~/.zshrc.personal
  echo "Reloaded zshrc.personal"
}

function etw() {
  nvim ~/.config/task/taskrc
}

# Per the below stackexchange link, this command makes the PATH variable deduplicate automatically.
# https://unix.stackexchange.com/questions/62579/is-there-a-way-to-add-a-directory-to-my-path-in-zsh-only-if-its-not-already-pre
typeset -U path PATH
# Now add some things:
function add_path() {
  [[ -d "$1" ]] && path+=("$1")
}
add_path "$HOME/go/bin"
add_path "$HOME/.local/share/fnm"
if [[ ! -z "$FNM_DIR" ]]; then
  echo "HI"
    eval "$(fnm env)"
fi

alias vim='nvim'
export EDITOR='nvim'

# Set up custom keybindings
# autoload -Uz zle
# # Custom keybindings for Vim-like movements
bindkey '^k' up-line-or-history     # Ctrl-k to move up in history
bindkey '^j' down-line-or-history   # Ctrl-j to move down in history
bindkey '^h' backward-word
bindkey '^l' forward-word

# I'm using this terminal a lot for time-tracking and task-tracking.
# I'm keeping two separate "notebooks": one for personal efforts, and one for professional efforts.
# Let's make it clear which one we're using:

function enter_task_mode() {
  if [[ $1 == "personal" ]]; then
    # export TASKRC=~/.taskrc_personal
    export TASKDATA=~/.local/share/task
    export TIMEWARRIORDB=~/.local/share/timewarrior
    # export JRNL_PATH=~/journal_personal.jrnl
    export TASK_MODE="personal"
    # Change prompt color (e.g., green for personal)
    PROMPT='%F{green}%n@%m %1~ [%B$TASK_MODE%b]%f %# '
  elif [[ $1 == "professional" ]]; then
    export TASKDATA=~/.local/share/task_
    export TIMEWARRIORDB=~/.local/share/timewarrior_work
    # export JRNL_PATH=~/journal_professional.jrnl
    export TASK_MODE="professional"
    # Change prompt color (e.g., blue for professional)
    PROMPT='%F{blue}%n@%m %1~ [%B$TASK_MODE%b]%f %# '
  else
    echo "Usage: enter_task_mode personal|professional, got $TASK_MODE"
    return 1
  fi
  echo "Switched to $TASK_MODE mode."
}

function switch_task_mode() {
  if [[ "$TASK_MODE" == "personal" ]]; then
    enter_task_mode "professional"
  elif [[ "$TASK_MODE" == "professional" ]]; then
    enter_task_mode "personal"
  else
    echo "Usage: switch_task_mode personal|professional, TASK_MODE currently is '$TASK_MODE'"
    return 1
  fi
  echo "Switched to $TASK_MODE mode."
}

# Not sure if I actually want to use the above features. Good to think about, is all.
# Enter personal task mode!
# if [[ -z "$TASK_MODE" ]]; then
#   enter_task_mode personal
# else
#   enter_task_mode $TASK_MODE
# fi

